(this.webpackJsonpalgo_vis=this.webpackJsonpalgo_vis||[]).push([[0],[,,,,,,,,,,,function(e,t,n){},,function(e,t,n){e.exports=n(25)},,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},,,function(e,t,n){},function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),i=n(12),r=n.n(i),s=(n(18),n(19),n(6)),c=n(1),l=n(2),d=n(3),u=n(5),h=n(4),f=(n(11),function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(l.a)(this,n),(a=t.call(this,e)).state={},a}return Object(d.a)(n,[{key:"render",value:function(){var e=this.props,t=e.row,n=e.col,a=e.type,i=e.text,r=e.onMouseDown,s=e.onMouseEnter,c=e.onMouseUp,l=e.onMouseLeave,d="finishNode"===a?"node-finish":"startNode"===a?"node-start":"checkpointNode"===a?"node-checkpoint":"wallNode"===a?"node-wall":"";return o.a.createElement("div",{id:"node-".concat(t,"-").concat(n),className:"node ".concat(d),onMouseDown:function(){return r(t,n)},onMouseEnter:function(){return s(t,n)},onMouseLeave:function(){return l(t,n)},onMouseUp:function(){return c(t,n)}},o.a.createElement("div",{className:"node-center"},i))}}]),n}(a.Component)),m=(n(20),function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(l.a)(this,n),(a=t.call(this,e)).state={},a}return Object(d.a)(n,[{key:"render",value:function(){var e=this.props,t=e.lastAlgoRunString,n=e.runTimeSeconds,a=e.numNodesInPath,i=e.numVisitedNodes,r=e.numWalls;return o.a.createElement("div",{id:"stats-component",className:"stats-component"},o.a.createElement("p",{className:"stat"},o.a.createElement("b",null,"Last Algorithm Run: ")," ",t),o.a.createElement("p",{className:"stat"},o.a.createElement("b",null,"Calculation Time: ")," ",n,"ms"),o.a.createElement("p",{className:"stat"},o.a.createElement("b",null,"Nodes in Path:")," ",a),o.a.createElement("p",{className:"stat"},o.a.createElement("b",null,"Nodes Visited:")," ",i),o.a.createElement("p",{className:"stat"},o.a.createElement("b",null,"Walls:")," ",r))}}]),n}(a.Component)),g=(n(21),function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(l.a)(this,n),(a=t.call(this,e)).state={},a}return Object(d.a)(n,[{key:"render",value:function(){return o.a.createElement("div",{id:"legend-component",className:"legend-component"},o.a.createElement("div",{className:"node node-start"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Start")),o.a.createElement("div",{className:"node node-finish"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Finish")),o.a.createElement("div",{className:"node node-wall"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Wall")),o.a.createElement("div",{className:"node node-visited node-legend"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Visited")),o.a.createElement("div",{className:"node node-shortest-path node-legend"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Path")),o.a.createElement("div",{className:"node node-current node-legend"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Current")),o.a.createElement("div",{className:"node node-legend"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Unvisited")),o.a.createElement("div",{className:"node node-checkpoint node-legend"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Checkpoint")),o.a.createElement("div",{className:"node node-checkpoint node-current node-legend"}),o.a.createElement("p",{className:"legend-item"},o.a.createElement("b",null," Visited Checkpoint")))}}]),n}(a.Component)),v=n(9),N=n(7),p=n.n(N);function b(e,t,n){var a=0,o=0;a+=t.length;for(var i=function(a){a===t.length-1&&(o+=new Set(n).size,setTimeout((function(){!function(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:25,a=function(e){setTimeout((function(){var n=t[e],a=document.getElementById("node-".concat(n.row,"-").concat(n.col));a.className=a.className.replace(" node-shortest-path",""),setTimeout((function(){a.className=a.className+" node-shortest-path"}),10)}),n*e)},o=0;o<t.length;o++)a(o);setTimeout((function(){e.setState({running:!1})}),n*t.length)}(e,n,25)}),10*a)),setTimeout((function(){var e=t[a],n=document.getElementById("node-".concat(e.row,"-").concat(e.col)).className;document.getElementById("node-".concat(e.row,"-").concat(e.col)).className=n+" node-current",setTimeout((function(){document.getElementById("node-".concat(e.row,"-").concat(e.col)).className=n+" node-visited"}),10)}),10*a)},r=0;r<t.length;r++)i(r);e.setState({numVisitedNodes:a,numNodesInPath:o})}function y(e){var t,n=[],a=Object(c.a)(e);try{for(a.s();!(t=a.n()).done;){var o,i=t.value,r=Object(c.a)(i);try{for(r.s();!(o=r.n()).done;){var s=o.value;n.push(s)}}catch(l){r.e(l)}finally{r.f()}}}catch(l){a.e(l)}finally{a.f()}return n}function E(e,t){var n=[],a=e.row,o=e.col;return a>0&&n.push(t[a-1][o]),a+1<t.length&&n.push(t[a+1][o]),o>0&&n.push(t[a][o-1]),o+1<t[0].length&&n.push(t[a][o+1]),n.filter((function(e){return!e.isVisited}))}function k(e){for(var t=[],n=e;null!==n;)t.unshift(n),n=n.previousNode;return t}function w(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=e.state.grid,o=Object(c.a)(a);try{for(o.s();!(t=o.n()).done;){var i,r=t.value,s=Object(c.a)(r);try{for(s.s();!(i=s.n()).done;){var l=i.value,d="startNode"===l.type?0:1/0;a[l.row][l.col]=C(l.row,l.col,l.type,d,l.text),"default"===l.type?document.getElementById("node-".concat(l.row,"-").concat(l.col)).className="node":"checkpointNode"===l.type&&(document.getElementById("node-".concat(l.row,"-").concat(l.col)).className="node node-checkpoint")}}catch(u){s.e(u)}finally{s.f()}}}catch(u){o.e(u)}finally{o.f()}e.setState({grid:a,isPathDrawn:!1,numNodesInPath:0,numVisitedNodes:0},n)}function C(e,t,n,a){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";return{row:e,col:t,type:n,text:o,distance:a,heuristic:0,isVisited:!1,previousNode:null}}function S(e,t){return Math.floor(Math.random()*(t-e+1))+e}function j(e,t){var n,a=e.state,o=a.grid,i=a.startNodeCoords,r=a.finishNodeCoords,s=Object(c.a)(o);try{for(s.s();!(n=s.n()).done;){var l,d=n.value,u=Object(c.a)(d);try{for(u.s();!(l=u.n()).done;){var h=l.value;document.getElementById("node-".concat(h.row,"-").concat(h.col)).className="node"}}catch(f){u.e(f)}finally{u.f()}}}catch(f){s.e(f)}finally{s.f()}document.getElementById("node-".concat(i[0],"-").concat(i[1])).className="node node-start",document.getElementById("node-".concat(r[0],"-").concat(r[1])).className="node node-finish",o=O(e),e.setState({grid:o,numWalls:0,numNodesInPath:0,numVisitedNodes:0,checkpointNodes:[]},t)}function O(e){for(var t=[],n=0;n<20;n++){for(var a=[],o=0;o<50;o++)a.push(C(n,o,"default",1/0));t.push(a)}var i=Object(v.a)(e.state.startNodeCoords,2),r=i[0],s=i[1],c=Object(v.a)(e.state.finishNodeCoords,2),l=c[0],d=c[1];return t[r][s]=C(r,s,"startNode",0),t[l][d]=C(l,d,"finishNode",1/0),t}function D(e,t,n,a){var o=e-n,i=t-a;return Math.sqrt(o*o+i*i)}function I(e,t,n,a,o,i){var r,s,l,d,u,h,f=n.state.startNodeCoords,m=[],g=[],v=n.state.checkpointNodes,N=!0,y=[];v.sort((function(e,t){return e.id-t.id})),n.setState({running:!0,isPathDrawn:!0}),w(n);var E,C=Object(c.a)(v);try{for(C.s();!(E=C.n()).done;){var S=E.value;S.isVisited=!1,S.distance=1/0}}catch(I){C.e(I)}finally{C.f()}for(;n.getDestinationNodeInfo().coords!==i;){l=n.getDestinationNodeInfo(),r=(new Date).getTime(),(d=p.a.cloneDeep(a))[f[0]][f[1]].distance=1/0,d[o[0]][o[1]].distance=0,"DFS"===t?(u=d[o[0]][o[1]],h=d[l.coords[0]][l.coords[1]],m.push(e(d,u,h,[])[1])):m.push(e(d,o,l.coords)),y=k(d[l.coords[0]][l.coords[1]]),g.push(y),s=(new Date).getTime()-r,o=l.coords,l.isVisited=!0;var j,O=Object(c.a)(v);try{for(O.s();!(j=O.n()).done;){var D=j.value;D.id===l.id-1&&(D=l)}}catch(I){O.e(I)}finally{O.f()}if(y.length<=1){N=!1;break}}N?(r=(new Date).getTime(),(d=p.a.cloneDeep(a))[f[0]][f[1]].distance=1/0,d[o[0]][o[1]].distance=0,"DFS"===t?(u=d[o[0]][o[1]],h=d[i[0]][i[1]],m.push(e(d,u,h,[])[1])):m.push(e(d,o,i)),g.push(k(d[i[0]][i[1]])),s=(new Date).getTime()-r,b(n,m.flat(),g.flat())):b(n,m.flat(),[]),n.setState({visitedNodesToAnimate:m,pathNodesToAnimate:g,checkpointNodes:v,isPathDrawn:!0,runTimeSeconds:s,lastAlgoRunString:t})}function M(e,t,n){var a=e[t[0]][t[1]],o=e[n[0]][n[1]];a.distance=0;for(var i=[],r=y(e);r.length;){r.sort((function(e,t){return e.distance-t.distance}));var s=r.shift();if("wallNode"!==s.type){if(s.distance===1/0)return i;if(s.isVisited=!0,i.push(s),s===o)return i;V(s,e)}}}function V(e,t){var n,a=E(e,t),o=Object(c.a)(a);try{for(o.s();!(n=o.n()).done;){var i=n.value;i.distance=e.distance+1,i.previousNode=e}}catch(r){o.e(r)}finally{o.f()}}function T(e,t,n){var a=e[t[0]][t[1]],o=e[n[0]][n[1]];e=function(e,t){var n,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"manhattan",o=Object(c.a)(e);try{for(o.s();!(n=o.n()).done;){var i,r=n.value,s=Object(c.a)(r);try{for(s.s();!(i=s.n()).done;){var l=i.value;"manhattan"===a?l.heuristic=Math.abs(l.row-t.row)+Math.abs(l.col-t.col):"euclidean"===a&&(l.heuristic=D(l.row,l.col,t.row,t.col))}}catch(d){s.e(d)}finally{s.f()}}}catch(d){o.e(d)}finally{o.f()}return e}(e,o,"manhattan"),a.distance=0;for(var i=[],r=y(e);r.length;){r.sort((function(e,t){return e.distance>t.distance?1:e.distance<t.distance?-1:e.heuristic>t.heuristic?1:e.heuristic<t.heuristic?-1:0}));var s=r.shift();if("wallNode"!==s.type){if(s.distance===1/0)return i;if(s.isVisited=!0,i.push(s),s===o)return i;B(s,e)}}}function B(e,t){var n,a=function(e,t){var n=[],a=e.row,o=e.col;return a>0&&n.push(t[a-1][o]),a+1<t.length&&n.push(t[a+1][o]),o>0&&n.push(t[a][o-1]),o+1<t[0].length&&n.push(t[a][o+1]),n}(e,t),o=Object(c.a)(a);try{for(o.s();!(n=o.n()).done;){var i=n.value;i.isVisited?i.distance-i.heuristic<e.previousNode.distance-e.previousNode.heuristic&&(e.previousNode=i):(0===e.distance?i.distance=1+i.heuristic:i.distance=e.distance-e.heuristic+1+i.heuristic,i.previousNode=e)}}catch(r){o.e(r)}finally{o.f()}}function P(e,t,n,a){if(a.push(t),t.isVisited=!0,t===n)return[a,a];var o,i=Object(c.a)(E(t,e).filter((function(e){return"wallNode"!==e.type})));try{for(i.s();!(o=i.n()).done;){var r=o.value;if(!r.isVisited){r.previousNode=t;var s=P(e,r,n,a)[0];if(s)return[s,s]}}}catch(l){i.e(l)}finally{i.f()}return[null,a]}function A(e,t,n){var a=e[t[0]][t[1]],o=e[n[0]][n[1]],i=[a],r=[a];if(a.isVisited=!0,a===o)return r;for(;i;){if(!(a=i.shift()))return r;var s,l=Object(c.a)(E(a,e).filter((function(e){return"wallNode"!==e.type})));try{for(l.s();!(s=l.n()).done;){var d=s.value;if(!r.includes(d)&&(d.previousNode=a,d.isVisited=!0,r.push(d),i.push(d),d===o))return r}}catch(u){l.e(u)}finally{l.f()}}return r}n(24);function W(e,t,n,a){e.setState({running:!0}),j(e,(function(){var o=(new Date).getTime(),i=function e(t,n,a,o){var i,r,s;if(t.length<=2&&t[0].length<=2)return o;if(0===o.length){for(var c=0;c<t.length;c++)for(var l=0;l<t[0].length;l++)0!==c&&0!==l&&c!==t.length-1&&l!==t[0].length-1||"startNode"!==t[c][l].type&&"finishNode"!==t[c][l].type&&o.push(t[c][l]);t=t.slice(1,t.length-1);for(var d=0;d<t.length;d++)t[d]=t[d].slice(1,t[d].length-1)}if(t.length>t[0].length){i=S(1,t.length-2),s=0===S(0,1)?0:t[0].length-1;for(var u=0;u<t[i].length;u++)u!==s&&t[i][u]&&"startNode"!==t[i][u].type&&"finishNode"!==t[i][u].type&&o.push(t[i][u]);for(var h=[],f=[],m=0;m<t.length;m++){for(var g=[],v=[],N=0;N<t[0].length;N++)m<i&&g.push(t[m][N]),m>i&&v.push(t[m][N]);0!==g.length&&h.push(g),0!==v.length&&f.push(v)}o=e(h,n,a,o),o=e(f,n,a,o)}else{r=S(1,t[0].length-2),s=0===S(0,1)?0:t.length-1;for(var p=0;p<t.length;p++)p!==s&&t[p][r]&&"startNode"!==t[p][r].type&&"finishNode"!==t[p][r].type&&o.push(t[p][r]);for(var b=[],y=[],E=0;E<t.length;E++){for(var k=[],w=[],C=0;C<t[0].length;C++)C<r&&k.push(t[E][C]),C>r&&w.push(t[E][C]);b.push(k),y.push(w)}o=e(b,n,a,o),o=e(y,n,a,o)}return o}(t,n,a,[]),r=(new Date).getTime()-o;e.setState({runTimeSeconds:r,lastAlgoRunString:"Recursive Division"}),function(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=e.state.grid,o=10,i=function(e){setTimeout((function(){var n=t[e],a=document.getElementById("node-".concat(n.row,"-").concat(n.col)).className;document.getElementById("node-".concat(n.row,"-").concat(n.col)).className=a+" node-current",setTimeout((function(){document.getElementById("node-".concat(n.row,"-").concat(n.col)).className=a+" node-wall"}),o)}),o*e)},r=0;r<t.length;r++)i(r);setTimeout((function(){e.setState({running:!1}),n&&n(e,a,t)}),o*t.length)}(e,i,R)}))}function R(e,t,n){var a,o=Object(c.a)(n);try{for(o.s();!(a=o.n()).done;){var i=a.value,r=Object(s.a)(Object(s.a)({},i),{},{type:"wallNode"});t[i.row][i.col]=r}}catch(l){o.e(l)}finally{o.f()}e.setState({grid:t,numWalls:n.length})}var F=function(e){Object(u.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(l.a)(this,n),(a=t.call(this,e)).state={grid:[],startNodeCoords:[5,10],finishNodeCoords:[7,40],checkpointNodes:[],draggingCheckpointNodeInfo:{},running:!1,dragging:"",isPathDrawn:!1,lastAlgoRunString:"",runTimeSeconds:0,numNodesInPath:0,numVisitedNodes:0,numWalls:0},a}return Object(d.a)(n,[{key:"componentDidMount",value:function(){var e=O(this);this.setState({grid:e})}},{key:"handleMouseDown",value:function(e,t){var n=this.state.grid[e][t].type,a=this.state,o=a.running,i=a.grid,r=a.numWalls,s=a.checkpointNodes,c=a.draggingCheckpointNodeInfo;if(!o)if("wallNode"===n||"default"===n){r="wallNode"===n?r-1:r+1;var l=x(i,e,t);this.setState({grid:l,dragging:n,numWalls:r})}else"checkpointNode"===n?(s.forEach((function(n){n.coords[0]===e&&n.coords[1]===t&&(c=n)})),this.setState({dragging:n,draggingCheckpointNodeInfo:c})):this.setState({dragging:n})}},{key:"handleMouseEnter",value:function(e,t){var n=this.state,a=n.grid,o=n.running,i=n.dragging,r=n.numWalls,s=n.startNodeCoords,l=n.finishNodeCoords,d=n.checkpointNodes,u=n.draggingCheckpointNodeInfo,h=a[e][t].type,f="",m=a;if(!o&&""!==i){if(["startNode","finishNode","checkpointNode"].includes(i))if(m="checkpointNode"===i?L(m,e,t,i,u.id):L(m,e,t,i),"wallNode"===h)r-=1;else{var g=function(e){var t,n=e.state.grid,a=[],o=Object(c.a)(n);try{for(o.s();!(t=o.n()).done;){var i=t.value.filter((function(e){return"default"===e.type}));i.length>0&&a.push(i)}}catch(l){o.e(l)}finally{o.f()}if(a.length>0){var r=S(0,a.length-1),s=a[r][S(0,a[r].length-1)];return[s.row,s.col]}}(this);"finishNode"===h?(m=L(m,g[0],g[1],"finishNode"),l=g):"startNode"===h?(m=L(m,g[0],g[1],"startNode"),s=g):"checkpointNode"===h&&(d.forEach((function(n){n.coords[0]===e&&n.coords[1]===t&&(n.coords=g,f=n.id)})),u.coords=[e,t],m=L(m,g[0],g[1],"checkpointNode",f))}else"default"===i&&(r="wallNode"===h?r-1:r+1,m=x(m,e,t));this.setState({grid:m,numWalls:r,startNodeCoords:s,finishNodeCoords:l,checkpointNodes:d,draggingCheckpointNodeInfo:u})}}},{key:"handleMouseLeave",value:function(e,t){this.state.running||["startNode","finishNode","checkpointNode"].includes(this.state.dragging)&&(this.state.isPathDrawn&&w(this),this.setState({grid:L(this.state.grid,e,t,"default")}))}},{key:"handleMouseUp",value:function(e,t){var n=this.state,a=n.running,o=n.grid,i=n.dragging,r=n.checkpointNodes,s=n.draggingCheckpointNodeInfo;if(!a){if("startNode"===i){var c=L(o,e,t,"startNode");this.setState({grid:c,dragging:"",startNodeCoords:[e,t]})}else if("finishNode"===i){var l=L(o,e,t,"finishNode");this.setState({grid:l,dragging:"",finishNodeCoords:[e,t]})}else if("checkpointNode"===i){var d=L(o,e,t,"checkpointNode",s.id);r.forEach((function(n){n.id===s.id&&(n.coords=[e,t])})),this.setState({grid:d,dragging:"",checkpointNodes:r})}this.setState({dragging:""})}}},{key:"getEmptyNodes",value:function(e){var t,n=[],a=Object(c.a)(e);try{for(a.s();!(t=a.n()).done;){var o=t.value.filter((function(e){return"default"===e.type}));o.length>0&&n.push(o)}}catch(i){a.e(i)}finally{a.f()}return n}},{key:"randomizeStartFinishNodes",value:function(){var e=this.state,t=e.grid,n=e.startNodeCoords,a=e.finishNodeCoords;t[n[0]][n[1]]=C(n[0],n[1],"default",1/0),t[a[0]][a[1]]=C(a[0],a[1],"default",1/0);var o=this.getEmptyNodes(t);if(o.length>0){var i=S(0,o.length-1),r=o[i][S(0,o[i].length-1)],s=S(0,o.length-1),c=o[s][S(0,o[s].length-1)];n=[r.row,r.col],a=[c.row,c.col],t[n[0]][n[1]]=C(n[0],n[1],"startNode",0),t[a[0]][a[1]]=C(a[0],a[1],"finishNode",1/0),this.setState({grid:t,startNodeCoords:n,finishNodeCoords:a})}}},{key:"addCheckpointNode",value:function(){var e=this.state,t=e.grid,n=e.checkpointNodes;if(e.isPathDrawn){w(this);var a,o=Object(c.a)(n);try{for(o.s();!(a=o.n()).done;){a.value.isVisited=!1}}catch(u){o.e(u)}finally{o.f()}}var i=this.getEmptyNodes(t);if(i.length>0){var r=S(0,i.length-1),s=i[r][S(0,i[r].length-1)],l=[s.row,s.col],d={id:n.length+1,coords:l,isVisited:!1};t[l[0]][l[1]]=C(l[0],l[1],"checkpointNode",1/0,d.id),n.push(d),this.setState({grid:t,checkpointNodes:n})}}},{key:"getDestinationNodeInfo",value:function(){var e,t=this.state,n=t.checkpointNodes,a=t.finishNodeCoords,o=Object(c.a)(n.reverse());try{for(o.s();!(e=o.n()).done;){var i=e.value;if(!i.isVisited)return i}}catch(r){o.e(r)}finally{o.f()}return{id:0,coords:a,isVisited:!1}}},{key:"render",value:function(){var e=this,t=this.state,n=t.grid,a=t.startNodeCoords,i=t.finishNodeCoords,r=t.runTimeSeconds,s=t.numNodesInPath,c=t.numVisitedNodes,l=t.numWalls,d=t.lastAlgoRunString;return o.a.createElement("div",{className:"body"},o.a.createElement("div",{className:"menu"},o.a.createElement("h1",{className:"title"},"Pathfinding Visualizer"),o.a.createElement("div",{className:"menu-group-container"},o.a.createElement("div",{className:"menu-group"},o.a.createElement("h2",null,"Pathfinding"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return I(M,"Dijkstra",e,n,a,i)}},"Dijkstra's Algorithm"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return I(T,"A*",e,n,a,i)}},"A*"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return I(P,"DFS",e,n,a,i)}},"DFS"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return I(A,"BFS",e,n,a,i)}},"BFS")),o.a.createElement("div",{className:"menu-group"},o.a.createElement("h2",null,"Generators"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return W(e,n,a,i)}},"Recursive Division")),o.a.createElement("div",{className:"menu-group"},o.a.createElement("h2",null,"Board Options"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return e.addCheckpointNode()}},"Add checkpoint"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return j(e)}},"Clear Board"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return w(e)}},"Clear Path"),o.a.createElement("button",{className:"btn btn-outline-dark",disabled:this.state.running,onClick:function(){return w(e,e.randomizeStartFinishNodes)}},"Randomize Start and End Nodes")))),o.a.createElement("div",{className:"grid-container"},o.a.createElement(g,null),o.a.createElement(m,{runTimeSeconds:r,numNodesInPath:s,numVisitedNodes:c,numWalls:l,lastAlgoRunString:d}),o.a.createElement("div",{className:"grid"},n.map((function(t,n){return o.a.createElement("div",{key:n},t.map((function(t,n){var a=t.row,i=t.col,r=t.type,s=t.distance,c=t.text;return o.a.createElement(f,{key:n,className:"node",row:a,col:i,type:r,text:c,distance:s,onMouseDown:function(t,n){return e.handleMouseDown(t,n)},onMouseEnter:function(t,n){return e.handleMouseEnter(t,n)},onMouseUp:function(t,n){return e.handleMouseUp(t,n)},onMouseLeave:function(t,n){return e.handleMouseLeave(t,n)}})})))})))))}}]),n}(a.Component);function x(e,t,n){var a=e.slice(),o=a[t][n],i=Object(s.a)(Object(s.a)({},o),{},{type:"wallNode"===o.type?"default":"default"===o.type?"wallNode":o.type});return a[t][n]=i,a}function L(e,t,n,a){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"",i=e.slice(),r=i[t][n],c=Object(s.a)(Object(s.a)({},r),{},{text:o,type:a});return i[t][n]=c,i}var U=function(){return o.a.createElement("div",{className:"App"},o.a.createElement(F,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(U,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[13,1,2]]]);
//# sourceMappingURL=main.103f3194.chunk.js.map